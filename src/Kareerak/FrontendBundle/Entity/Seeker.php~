<?php

namespace Kareerak\FrontendBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Kareerak\FrontendBundle\Entity\Seeker
 *
 * @ORM\Table(name="seeker")
 * @ORM\Entity
 */
class Seeker
{
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var string $fname
     *
     * @ORM\Column(name="fname", type="string", length=255, nullable=true)
     */
    private $fname;

    /**
     * @var string $lname
     *
     * @ORM\Column(name="lname", type="string", length=255, nullable=true)
     */
    private $lname;

    /**
     * @var string $addressLine1
     *
     * @ORM\Column(name="address_line_1", type="string", length=255, nullable=true)
     */
    private $addressLine1;

    /**
     * @var string $addressLine2
     *
     * @ORM\Column(name="address_line_2", type="string", length=255, nullable=true)
     */
    private $addressLine2;

    /**
     * @var string $website
     *
     * @ORM\Column(name="website", type="string", length=255, nullable=true)
     */
    private $website;

    /**
     * @var string $blog
     *
     * @ORM\Column(name="blog", type="string", length=255, nullable=true)
     */
    private $blog;

    /**
     * @var string $facebookUri
     *
     * @ORM\Column(name="facebook_uri", type="string", length=255, nullable=true)
     */
    private $facebookUri;

    /**
     * @var string $twitterUri
     *
     * @ORM\Column(name="twitter_uri", type="string", length=255, nullable=true)
     */
    private $twitterUri;

    /**
     * @var string $linkedinUri
     *
     * @ORM\Column(name="linkedin_uri", type="string", length=255, nullable=true)
     */
    private $linkedinUri;

    /**
     * @var date $dob
     *
     * @ORM\Column(name="dob", type="date", nullable=true)
     */
    private $dob;

    /**
     * @var string $gender
     *
     * @ORM\Column(name="gender", type="string", length=255, nullable=true)
     */
    private $gender;

    /**
     * @var string $nationality
     *
     * @ORM\Column(name="nationality", type="string", length=255, nullable=true)
     */
    private $nationality;

    /**
     * @var string $maritalStatus
     *
     * @ORM\Column(name="marital_status", type="string", length=255, nullable=true)
     */
    private $maritalStatus;

    /**
     * @var Certification
     *
     * @ORM\ManyToMany(targetEntity="Certification", inversedBy="seeker")
     * @ORM\JoinTable(name="seeker_certification",
     *   joinColumns={
     *     @ORM\JoinColumn(name="seeker_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="certification_id", referencedColumnName="id")
     *   }
     * )
     */
    private $certification;

    /**
     * @var Language
     *
     * @ORM\ManyToMany(targetEntity="Language", mappedBy="seeker")
     */
    private $language;

    /**
     * @var Skill
     *
     * @ORM\ManyToMany(targetEntity="Skill", inversedBy="seeker")
     * @ORM\JoinTable(name="seeker_skill",
     *   joinColumns={
     *     @ORM\JoinColumn(name="seeker_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="skill_id", referencedColumnName="id")
     *   }
     * )
     */
    private $skill;

    /**
     * @var Account
     *
     * @ORM\ManyToOne(targetEntity="Account")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="account_id", referencedColumnName="id")
     * })
     */
    private $account;

    /**
     * @var Attachment
     *
     * @ORM\ManyToOne(targetEntity="Attachment")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="att_cv_id", referencedColumnName="id")
     * })
     */
    private $attCv;

    /**
     * @var Country
     *
     * @ORM\ManyToOne(targetEntity="Country")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="country_id", referencedColumnName="id")
     * })
     */
    private $country;

    /**
     * @var City
     *
     * @ORM\ManyToOne(targetEntity="City")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="city_id", referencedColumnName="id")
     * })
     */
    private $city;

    /**
     * @var Area
     *
     * @ORM\ManyToOne(targetEntity="Area")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="area_id", referencedColumnName="id")
     * })
     */
    private $area;

    public function __construct()
    {
        $this->certification = new \Doctrine\Common\Collections\ArrayCollection();
    $this->language = new \Doctrine\Common\Collections\ArrayCollection();
    $this->skill = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
}