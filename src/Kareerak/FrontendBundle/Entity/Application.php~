<?php

namespace Kareerak\FrontendBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Kareerak\FrontendBundle\Entity\Application
 *
 * @ORM\Table(name="application")
 * @ORM\Entity
 */
class Application
{
    /**
     * @var integer $id
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var datetime $timestamp
     *
     * @ORM\Column(name="timestamp", type="datetime", nullable=false)
     */
    private $timestamp;

    /**
     * @var string $notes
     *
     * @ORM\Column(name="notes", type="string", length=5000, nullable=true)
     */
    private $notes;

    /**
     * @var boolean $starred
     *
     * @ORM\Column(name="starred", type="boolean", nullable=true)
     */
    private $starred;

    /**
     * @var string $coverLetter
     *
     * @ORM\Column(name="cover_letter", type="string", length=5000, nullable=true)
     */
    private $coverLetter;

    /**
     * @var Attachment
     *
     * @ORM\ManyToMany(targetEntity="Attachment", inversedBy="application")
     * @ORM\JoinTable(name="application_attachments",
     *   joinColumns={
     *     @ORM\JoinColumn(name="application_id", referencedColumnName="id")
     *   },
     *   inverseJoinColumns={
     *     @ORM\JoinColumn(name="attachment_id", referencedColumnName="id")
     *   }
     * )
     */
    private $attachment;

    /**
     * @var ApplicationStatus
     *
     * @ORM\ManyToOne(targetEntity="ApplicationStatus")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="status_id", referencedColumnName="id")
     * })
     */
    private $status;

    /**
     * @var Seeker
     *
     * @ORM\ManyToOne(targetEntity="Seeker")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="seeker_id", referencedColumnName="id")
     * })
     */
    private $seeker;

    /**
     * @var Job
     *
     * @ORM\ManyToOne(targetEntity="Job")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="job_id", referencedColumnName="id")
     * })
     */
    private $job;

    public function __construct()
    {
        $this->attachment = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
}